#BlueJ class context
comment0.params=
comment0.target=void\ checkCustomerAM001()
comment0.text=\r\n\ Check\ that\ the\ accessors\ and\ mutators\ actually\ set\r\n\ the\ customer\ field\ and\ return\ a\ customer\ object\ with\r\n\ the\ same\ name\ and\ ssn.\ \ \r\n\ \r\n\ DOES\ NOT\ check\ for\ proper\ copy\ operations.\r\n
comment1.params=
comment1.target=void\ checkCustomerMutatorCopy002()
comment1.text=\r\n\ Check\ mutator\ to\ make\ sure\ a\ copy\ is\ of\ the\ argument\ is\ set.\r\n
comment10.params=flight
comment10.target=void\ checkFlightAM(Flight)
comment10.text=\r\n\ Check\ the\ flight\ accessor\ mutator.\ This\ is\ a\ simple\ test\r\n\ to\ make\ sure\ that\ the\ flight\ that\ is\ set\ in\ the\ mutator\r\n\ and\ the\ flight\ that\ is\ returned\ from\ the\ accessor\ have\r\n\ the\ same\ data.\r\n\ \r\n\ @param\ flight\ The\ flight\ object\ to\ use\ for\ testing.\r\n
comment11.params=customer
comment11.target=void\ checkCustomerMutatorCopy(Customer)
comment11.text=\r\n\ Check\ the\ customer\ mutator.\ This\ test\ is\ ensuring\ that\r\n\ the\ mutator\ makes\ a\ copy\ of\ the\ argument\ and\ sets\ the\ \r\n\ field\ from\ the\ copy.\r\n\ \r\n\ @param\ customer\ The\ customer\ object\ to\ use\ for\ testing.\r\n
comment12.params=flight
comment12.target=void\ checkFlightMutatorCopy(Flight)
comment12.text=\r\n\ Check\ the\ flight\ mutator.\ This\ test\ is\ ensuring\ that\r\n\ the\ mutator\ makes\ a\ copy\ of\ the\ argument\ and\ sets\ the\ \r\n\ field\ from\ the\ copy.\r\n\ \r\n\ @param\ flight\ The\ flight\ object\ to\ use\ for\ testing.\r\n
comment13.params=customer
comment13.target=void\ checkCustomerAccessorCopy(Customer)
comment13.text=\r\n\ Check\ the\ customer\ accessor.\ This\ test\ is\ ensuring\ that\r\n\ the\ accessor\ makes\ a\ copy\ of\ the\ field\ and\ returns\ the\r\n\ copy\ instead\ of\ directly\ returning\ the\ field.\r\n\ \r\n\ @param\ customer\ The\ customer\ object\ to\ use\ for\ testing.\r\n
comment14.params=flight
comment14.target=void\ checkFlightAccessorCopy(Flight)
comment14.text=\r\n\ Check\ the\ flight\ accessor.\ This\ test\ is\ ensuring\ that\r\n\ the\ accessor\ makes\ a\ copy\ of\ the\ field\ and\ returns\ the\r\n\ copy\ instead\ of\ directly\ returning\ the\ field.\r\n\ \r\n\ @param\ flight\ The\ flight\ object\ to\ use\ for\ testing.\r\n
comment15.params=customer\ flight
comment15.target=void\ checkArgConstructor(Customer,\ Flight)
comment15.text=\r\n\ Test\ argument\ constructor.\r\n\ \r\n\ @param\ customer\ The\ customer\ object\ to\ test\ with.\r\n\ @param\ flight\ The\ flight\ object\ to\ test\ with.\r\n
comment16.params=customer\ flight
comment16.target=void\ checkArgConstructorNull(Customer,\ Flight)
comment16.text=\r\n\ Test\ argument\ constructor\ for\ null\ values.\r\n\ \r\n\ @param\ customer\ The\ customer\ object\ to\ test\ with.\r\n\ @param\ flight\ The\ flight\ object\ to\ test\ with.\r\n
comment17.params=c1\ c2
comment17.target=boolean\ isCustomerEqual(Customer,\ Customer)
comment17.text=\r\n\ Check\ to\ see\ if\ two\ customers\ are\ equal\ in\ all\ field\ values.\r\n\ @param\ c1\ The\ first\ customer\ for\ equality\ check.\r\n\ @param\ c2\ The\ second\ customer\ to\ check\ against\ the\ first.\r\n\ @return\ Returns\ true\ if\ the\ two\ customer\ parameters\ have\ the\r\n\ same\ name\ and\ ssn.\r\n\ \r\n
comment18.params=f1\ f2
comment18.target=boolean\ isFlightEqual(Flight,\ Flight)
comment18.text=\r\n\ Check\ to\ see\ if\ two\ flights\ are\ equal\ in\ all\ field\ values.\r\n\ @param\ f1\ The\ first\ flight\ for\ equality\ check.\r\n\ @param\ f2\ The\ second\ flight\ to\ check\ against\ the\ first.\r\n\ @return\ Returns\ true\ if\ the\ two\ flight\ parameters\ have\ the\r\n\ same\ data.\r\n
comment2.params=
comment2.target=void\ checkCustomerAccessorCopy003()
comment2.text=\r\n\ Check\ accessor\ to\ make\ sure\ a\ copy\ of\ the\ field\ is\ returned.\r\n
comment3.params=
comment3.target=void\ checkFlightAM004()
comment3.text=\r\n\ Check\ that\ the\ accessors\ and\ mutators\ actually\ set\r\n\ the\ flight\ field\ and\ return\ a\ flight\ object\ with\r\n\ the\ the\ same\ data.\ \ \r\n\ \r\n\ DOES\ NOT\ check\ for\ proper\ copy\ operations.\r\n
comment4.params=
comment4.target=void\ checkFlightMutatorCopy005()
comment4.text=\r\n\ Check\ mutators\ to\ make\ sure\ copying\ of\ argument\ is\r\n\ performed.\r\n
comment5.params=
comment5.target=void\ checkFlightAccessorCopy006()
comment5.text=\r\n\ Check\ mutators\ to\ make\ sure\ setName\ and\ setSsn\ work\r\n\ properly.\r\n
comment6.params=
comment6.target=void\ checkConstructors007()
comment6.text=\r\n\ Check\ the\ constructors.\r\n
comment7.params=
comment7.target=void\ checkToString008()
comment7.text=\r\n\ Check\ the\ toString\ method.\r\n
comment8.params=ticket\ answer
comment8.target=void\ checkToString(Ticket,\ java.lang.String)
comment8.text=\r\n\ Test\ toString\ with\ given\ parameters.\r\n\ @param\ ticket\ The\ ticket\ to\ test\ with.\r\n\ @param\ answer\ The\ correct\ answer\ for\ comparison.\r\n
comment9.params=customer
comment9.target=void\ checkCustomerAM(Customer)
comment9.text=\r\n\ Check\ the\ customer\ accessor\ mutator.\ This\ is\ a\ simple\ test\r\n\ to\ make\ sure\ that\ the\ customer\ that\ is\ set\ in\ the\ mutator\r\n\ and\ the\ customer\ that\ is\ returned\ from\ the\ accessor\ have\r\n\ the\ same\ name\ and\ ssn.\r\n\ \r\n\ @param\ customer\ The\ customer\ object\ to\ use\ for\ testing.\r\n
numComments=19
