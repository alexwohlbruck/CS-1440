#BlueJ class context
comment0.params=title\ width\ height\ bgColor
comment0.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment0.text=\r\n\ Create\ a\ Canvas.\r\n\ @param\ title\ \ \ \ title\ to\ appear\ in\ Canvas\ Frame\r\n\ @param\ width\ \ \ \ the\ desired\ width\ for\ the\ canvas\r\n\ @param\ height\ \ \ the\ desired\ height\ for\ the\ canvas\r\n\ @param\ bgColor\ the\ desired\ background\ color\ of\ the\ canvas\r\n
comment1.params=title\ width\ height\ bgColor\ noFrame
comment1.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color,\ boolean)
comment1.text=\r\n\ Create\ a\ Canvas.\r\n\ @param\ title\ \ \ \ title\ to\ appear\ in\ Canvas\ Frame.\r\n\ @param\ width\ \ \ \ the\ desired\ width\ for\ the\ canvas.\r\n\ @param\ height\ \ \ the\ desired\ height\ for\ the\ canvas.\r\n\ @param\ bgColor\ the\ desired\ background\ color\ of\ the\ canvas.\r\n\ @param\ noFrame\ If\ this\ exists,\ make\ a\ no\ frame\ canvas.\r\n
comment10.params=
comment10.target=java.util.HashMap\ getShapes()
comment10.text=\r\n\ Return\ the\ list\ of\ shapes.\r\n\ @return\ Hashmap\ of\ all\ of\ the\ shapes\ attached\ to\ this\r\n\ canvas.\r\n
comment11.params=
comment11.target=java.util.ArrayList\ getSquares()
comment11.text=\r\n\ Return\ the\ list\ of\ shapes.\r\n\ @return\ Hashmap\ of\ all\ of\ the\ shapes\ attached\ to\ this\r\n\ canvas.\r\n
comment12.params=x
comment12.target=int\ countSquaresAtX(int)
comment12.text=\r\n\ Count\ the\ number\ of\ squares\ at\ a\ given\ x\ coordinate.\r\n\ @param\ x\ The\ x\ coordinate\ to\ check\ squares\ against.\r\n\ @return\ count\ Count\ of\ squares\ at\ the\ given\ x\ coordinate.\r\n
comment13.params=y
comment13.target=int\ countSquaresAtY(int)
comment13.text=\r\n\ Count\ the\ number\ of\ squares\ at\ a\ given\ y\ coordinate.\r\n\ @param\ y\ The\ y\ coordinate\ to\ check\ squares\ against.\r\n\ @return\ count\ Count\ of\ squares\ at\ the\ given\ y\ coordinate.\r\n
comment14.params=
comment14.target=void\ erase()
comment14.text=\r\n\ Erase\ the\ whole\ canvas.\ (Does\ not\ repaint.)\r\n
comment15.params=
comment15.target=void\ resetCanvas()
comment15.text=\r\n\ Reset\ canvas.\ \ Erase\ all\ shapes.\ \ Delete\ all\ shapes.\r\n\ Redraw\ axes.\r\n
comment16.params=color
comment16.target=int\ countShapesByColor(java.lang.String)
comment16.text=\r\n\ Count\ the\ number\ of\ shapes\ with\ the\ given\ color.\r\n\ \r\n\ @param\ color\ Count\ shapes\ with\ this\ color.\r\n\ \r\n\ @return\ Returns\ the\ number\ of\ shapes\ with\ the\ given\ color.\r\n
comment17.params=
comment17.target=int\ countOffscreenSquares()
comment17.text=\r\n\ Count\ the\ number\ of\ squares\ that\ are\ off\ the\ screen.\r\n\ \r\n\ @return\ Returns\ tne\ number\ of\ squares\ that\ have\ x\ or\ y\r\n\ positions\ outside\ the\ bounds\ of\ the\ window.\ \ That\ is\r\n\ x\ or\ y\ <\ 0\ or\ x\ or\ y\ >\ 299.\r\n
comment18.params=
comment18.target=java.util.ArrayList\ getCircles()
comment18.text=\r\n\ Get\ all\ circles\ that\ have\ been\ drawn.\r\n\ \r\n\ @return\ Returns\ an\ ArrayList\ of\ circle\ objects.\r\n
comment19.params=
comment19.target=java.awt.image.BufferedImage\ getCanvasImage()
comment19.text=\r\n\ Accessor\ for\ getting\ the\ canvas\ image.\r\n\ @return\ Returns\ the\ image\ associated\ with\ this\r\n\ canvas.\r\n
comment2.params=
comment2.target=Canvas\ getCanvas()
comment2.text=\r\n\ Factory\ method\ to\ get\ the\ canvas\ singleton\ object.\r\n\ @return\ Return\ the\ current\ canvas.\ \ Create\ a\ new\ canvas\ if\ one\r\n\ does\ not\ currently\ exist.\r\n
comment3.params=visible
comment3.target=void\ setVisible(boolean)
comment3.text=\r\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\r\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\r\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\r\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\r\n\ the\ canvas\ (true\ or\ false)\ \r\n
comment4.params=graphic
comment4.target=void\ drawAxes(java.awt.Graphics2D)
comment4.text=\r\n\ Draw\ the\ axes\ templates\ on\ the\ screen.\r\n\ \r\n\ @param\ graphic\ The\ graphic\ object\ which\ contains\r\n\ the\ canvas\ image\ data.\r\n
comment5.params=referenceObject\ color\ shape
comment5.target=void\ draw(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment5.text=\r\n\ Draw\ a\ given\ shape\ onto\ the\ canvas.\r\n\ @param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ shape\r\n\ @param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ the\ color\ of\ the\ shape\r\n\ @param\ \ shape\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\r\n
comment6.params=referenceObject
comment6.target=void\ erase(java.lang.Object)
comment6.text=\r\n\ Erase\ a\ given\ shape's\ from\ the\ screen.\r\n\ @param\ \ referenceObject\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment7.params=colorString
comment7.target=void\ setForegroundColor(java.lang.String)
comment7.text=\r\n\ Set\ the\ foreground\ color\ of\ the\ Canvas.\r\n\ @param\ \ colorString\ \ \ the\ new\ color\ for\ the\ foreground\ of\ the\ Canvas\ \r\n
comment8.params=milliseconds
comment8.target=void\ wait(int)
comment8.text=\r\n\ Wait\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\r\n\ This\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\r\n\ used\ when\ producing\ animations.\r\n\ @param\ \ milliseconds\ \ The\ number\ of\ seconds\ to\ sleep.\r\n
comment9.params=
comment9.target=void\ redraw()
comment9.text=\r\n\ Redraw\ all\ shapes\ currently\ on\ the\ Canvas.\r\n
numComments=20
